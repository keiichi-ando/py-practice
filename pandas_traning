{
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3-final"
  },
  "orig_nbformat": 2,
  "kernelspec": {
   "name": "python3",
   "display_name": "Python 3",
   "language": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2,
 "cells": [
  {
   "source": [
    "import pandas as pd\n"
   ],
   "cell_type": "code",
   "metadata": {},
   "execution_count": 3,
   "outputs": []
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "          年月日  平均気温(℃) 平均気温(℃).1 平均気温(℃).2  最高気温(℃) 最高気温(℃).1 最高気温(℃).2  \\\n",
       "0         NaN      NaN      品質情報      均質番号      NaN      品質情報      均質番号   \n",
       "1  2019/12/14      9.3         8         1     15.9         8         1   \n",
       "2  2019/12/15      7.8         8         1     11.1         8         1   \n",
       "3  2019/12/16      6.9         8         1     12.5         8         1   \n",
       "4  2019/12/17      8.2         8         1     10.3         8         1   \n",
       "\n",
       "   最低気温(℃) 最低気温(℃).1 最低気温(℃).2  ...  平均雲量(10分比).2 平均蒸気圧(hPa) 平均蒸気圧(hPa).1  \\\n",
       "0      NaN      品質情報      均質番号  ...          均質番号        NaN         品質情報   \n",
       "1      3.2         8         1  ...             1        NaN            0   \n",
       "2      4.0         8         1  ...             1        NaN            0   \n",
       "3      1.3         8         1  ...             1        NaN            0   \n",
       "4      5.7         8         1  ...             1        NaN            0   \n",
       "\n",
       "   平均蒸気圧(hPa).2 平均風速(m/s) 平均風速(m/s).1  平均風速(m/s).2 日照時間(時間) 日照時間(時間).1  \\\n",
       "0          均質番号       NaN        品質情報         均質番号      NaN       品質情報   \n",
       "1             1       2.0           8            1      8.9          8   \n",
       "2             1       2.3           8            1      6.3          8   \n",
       "3             1       1.1           8            1      8.9          8   \n",
       "4             1       1.1           8            1      0.2          8   \n",
       "\n",
       "   日照時間(時間).2  \n",
       "0        均質番号  \n",
       "1           1  \n",
       "2           1  \n",
       "3           1  \n",
       "4           1  \n",
       "\n",
       "[5 rows x 28 columns]"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>年月日</th>\n      <th>平均気温(℃)</th>\n      <th>平均気温(℃).1</th>\n      <th>平均気温(℃).2</th>\n      <th>最高気温(℃)</th>\n      <th>最高気温(℃).1</th>\n      <th>最高気温(℃).2</th>\n      <th>最低気温(℃)</th>\n      <th>最低気温(℃).1</th>\n      <th>最低気温(℃).2</th>\n      <th>...</th>\n      <th>平均雲量(10分比).2</th>\n      <th>平均蒸気圧(hPa)</th>\n      <th>平均蒸気圧(hPa).1</th>\n      <th>平均蒸気圧(hPa).2</th>\n      <th>平均風速(m/s)</th>\n      <th>平均風速(m/s).1</th>\n      <th>平均風速(m/s).2</th>\n      <th>日照時間(時間)</th>\n      <th>日照時間(時間).1</th>\n      <th>日照時間(時間).2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>品質情報</td>\n      <td>均質番号</td>\n      <td>NaN</td>\n      <td>品質情報</td>\n      <td>均質番号</td>\n      <td>NaN</td>\n      <td>品質情報</td>\n      <td>均質番号</td>\n      <td>...</td>\n      <td>均質番号</td>\n      <td>NaN</td>\n      <td>品質情報</td>\n      <td>均質番号</td>\n      <td>NaN</td>\n      <td>品質情報</td>\n      <td>均質番号</td>\n      <td>NaN</td>\n      <td>品質情報</td>\n      <td>均質番号</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2019/12/14</td>\n      <td>9.3</td>\n      <td>8</td>\n      <td>1</td>\n      <td>15.9</td>\n      <td>8</td>\n      <td>1</td>\n      <td>3.2</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2.0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>8.9</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2019/12/15</td>\n      <td>7.8</td>\n      <td>8</td>\n      <td>1</td>\n      <td>11.1</td>\n      <td>8</td>\n      <td>1</td>\n      <td>4.0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>2.3</td>\n      <td>8</td>\n      <td>1</td>\n      <td>6.3</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2019/12/16</td>\n      <td>6.9</td>\n      <td>8</td>\n      <td>1</td>\n      <td>12.5</td>\n      <td>8</td>\n      <td>1</td>\n      <td>1.3</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.1</td>\n      <td>8</td>\n      <td>1</td>\n      <td>8.9</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2019/12/17</td>\n      <td>8.2</td>\n      <td>8</td>\n      <td>1</td>\n      <td>10.3</td>\n      <td>8</td>\n      <td>1</td>\n      <td>5.7</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.1</td>\n      <td>8</td>\n      <td>1</td>\n      <td>0.2</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 28 columns</p>\n</div>"
     },
     "metadata": {},
     "execution_count": 20
    }
   ],
   "source": [
    "df = pd.read_csv('data/weather.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "            年月日  平均気温(℃) 平均気温(℃).1 平均気温(℃).2  最高気温(℃) 最高気温(℃).1 最高気温(℃).2  \\\n",
       "358   2020/12/5      6.0         8         1      7.3         8         1   \n",
       "359   2020/12/6      8.0         8         1     13.3         8         1   \n",
       "360   2020/12/7      9.0         8         1     16.0         8         1   \n",
       "361   2020/12/8     10.4         8         1     16.0         8         1   \n",
       "362   2020/12/9      9.2         8         1     11.2         8         1   \n",
       "363  2020/12/10      8.7         8         1     11.1         8         1   \n",
       "364  2020/12/11      9.2         8         1     13.8         8         1   \n",
       "365  2020/12/12     10.4         8         1     14.0         8         1   \n",
       "366  2020/12/13      8.6         8         1     14.4         8         1   \n",
       "367  2020/12/14      7.8         8         1     12.2         8         1   \n",
       "\n",
       "     最低気温(℃) 最低気温(℃).1 最低気温(℃).2  ...  平均雲量(10分比).2 平均蒸気圧(hPa) 平均蒸気圧(hPa).1  \\\n",
       "358      4.3         8         1  ...             1        NaN            0   \n",
       "359      4.5         8         1  ...             1        NaN            0   \n",
       "360      4.2         8         1  ...             1        NaN            0   \n",
       "361      4.6         8         1  ...             1        NaN            0   \n",
       "362      8.3         8         1  ...             1        NaN            0   \n",
       "363      6.0         8         1  ...             1        NaN            0   \n",
       "364      3.5         8         1  ...             1        NaN            0   \n",
       "365      8.0         8         1  ...             1        NaN            0   \n",
       "366      4.4         8         1  ...             1        NaN            0   \n",
       "367      4.4         8         1  ...             1        NaN            0   \n",
       "\n",
       "     平均蒸気圧(hPa).2 平均風速(m/s) 平均風速(m/s).1  平均風速(m/s).2 日照時間(時間) 日照時間(時間).1  \\\n",
       "358             1       1.4           8            1      0.0          8   \n",
       "359             1       1.0           8            1      3.8          8   \n",
       "360             1       0.7           8            1      9.0          8   \n",
       "361             1       1.3           8            1      6.9          8   \n",
       "362             1       1.4           8            1      0.0          8   \n",
       "363             1       1.4           8            1      0.0          8   \n",
       "364             1       0.8           8            1      4.3          8   \n",
       "365             1       1.4           8            1      1.4          8   \n",
       "366             1       1.0           8            1      5.5          8   \n",
       "367             1       1.9           8            1      4.4          8   \n",
       "\n",
       "     日照時間(時間).2  \n",
       "358           1  \n",
       "359           1  \n",
       "360           1  \n",
       "361           1  \n",
       "362           1  \n",
       "363           1  \n",
       "364           1  \n",
       "365           1  \n",
       "366           1  \n",
       "367           1  \n",
       "\n",
       "[10 rows x 28 columns]"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>年月日</th>\n      <th>平均気温(℃)</th>\n      <th>平均気温(℃).1</th>\n      <th>平均気温(℃).2</th>\n      <th>最高気温(℃)</th>\n      <th>最高気温(℃).1</th>\n      <th>最高気温(℃).2</th>\n      <th>最低気温(℃)</th>\n      <th>最低気温(℃).1</th>\n      <th>最低気温(℃).2</th>\n      <th>...</th>\n      <th>平均雲量(10分比).2</th>\n      <th>平均蒸気圧(hPa)</th>\n      <th>平均蒸気圧(hPa).1</th>\n      <th>平均蒸気圧(hPa).2</th>\n      <th>平均風速(m/s)</th>\n      <th>平均風速(m/s).1</th>\n      <th>平均風速(m/s).2</th>\n      <th>日照時間(時間)</th>\n      <th>日照時間(時間).1</th>\n      <th>日照時間(時間).2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>358</th>\n      <td>2020/12/5</td>\n      <td>6.0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>7.3</td>\n      <td>8</td>\n      <td>1</td>\n      <td>4.3</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.4</td>\n      <td>8</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>359</th>\n      <td>2020/12/6</td>\n      <td>8.0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>13.3</td>\n      <td>8</td>\n      <td>1</td>\n      <td>4.5</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>3.8</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>360</th>\n      <td>2020/12/7</td>\n      <td>9.0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>16.0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>4.2</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.7</td>\n      <td>8</td>\n      <td>1</td>\n      <td>9.0</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>361</th>\n      <td>2020/12/8</td>\n      <td>10.4</td>\n      <td>8</td>\n      <td>1</td>\n      <td>16.0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>4.6</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.3</td>\n      <td>8</td>\n      <td>1</td>\n      <td>6.9</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>362</th>\n      <td>2020/12/9</td>\n      <td>9.2</td>\n      <td>8</td>\n      <td>1</td>\n      <td>11.2</td>\n      <td>8</td>\n      <td>1</td>\n      <td>8.3</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.4</td>\n      <td>8</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>363</th>\n      <td>2020/12/10</td>\n      <td>8.7</td>\n      <td>8</td>\n      <td>1</td>\n      <td>11.1</td>\n      <td>8</td>\n      <td>1</td>\n      <td>6.0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.4</td>\n      <td>8</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>364</th>\n      <td>2020/12/11</td>\n      <td>9.2</td>\n      <td>8</td>\n      <td>1</td>\n      <td>13.8</td>\n      <td>8</td>\n      <td>1</td>\n      <td>3.5</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.8</td>\n      <td>8</td>\n      <td>1</td>\n      <td>4.3</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>365</th>\n      <td>2020/12/12</td>\n      <td>10.4</td>\n      <td>8</td>\n      <td>1</td>\n      <td>14.0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>8.0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.4</td>\n      <td>8</td>\n      <td>1</td>\n      <td>1.4</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>366</th>\n      <td>2020/12/13</td>\n      <td>8.6</td>\n      <td>8</td>\n      <td>1</td>\n      <td>14.4</td>\n      <td>8</td>\n      <td>1</td>\n      <td>4.4</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.0</td>\n      <td>8</td>\n      <td>1</td>\n      <td>5.5</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>367</th>\n      <td>2020/12/14</td>\n      <td>7.8</td>\n      <td>8</td>\n      <td>1</td>\n      <td>12.2</td>\n      <td>8</td>\n      <td>1</td>\n      <td>4.4</td>\n      <td>8</td>\n      <td>1</td>\n      <td>...</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1.9</td>\n      <td>8</td>\n      <td>1</td>\n      <td>4.4</td>\n      <td>8</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>10 rows × 28 columns</p>\n</div>"
     },
     "metadata": {},
     "execution_count": 11
    }
   ],
   "source": [
    "df.head(3)\n",
    "df.tail(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "          年月日  平均気温(℃)  最高気温(℃)  最低気温(℃)  降水量の合計(mm)  最深積雪(cm)  平均雲量(10分比)  \\\n",
       "1  2019/12/14      9.3     15.9      3.2         0.0       NaN         NaN   \n",
       "2  2019/12/15      7.8     11.1      4.0         0.0       NaN         NaN   \n",
       "3  2019/12/16      6.9     12.5      1.3         0.0       NaN         NaN   \n",
       "4  2019/12/17      8.2     10.3      5.7         2.0       NaN         NaN   \n",
       "5  2019/12/18      9.9     15.0      4.8         0.0       NaN         NaN   \n",
       "\n",
       "   平均蒸気圧(hPa)  平均風速(m/s)  日照時間(時間)  \n",
       "1         NaN        2.0       8.9  \n",
       "2         NaN        2.3       6.3  \n",
       "3         NaN        1.1       8.9  \n",
       "4         NaN        1.1       0.2  \n",
       "5         NaN        1.2       4.3  "
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>年月日</th>\n      <th>平均気温(℃)</th>\n      <th>最高気温(℃)</th>\n      <th>最低気温(℃)</th>\n      <th>降水量の合計(mm)</th>\n      <th>最深積雪(cm)</th>\n      <th>平均雲量(10分比)</th>\n      <th>平均蒸気圧(hPa)</th>\n      <th>平均風速(m/s)</th>\n      <th>日照時間(時間)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>2019/12/14</td>\n      <td>9.3</td>\n      <td>15.9</td>\n      <td>3.2</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>8.9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2019/12/15</td>\n      <td>7.8</td>\n      <td>11.1</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.3</td>\n      <td>6.3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2019/12/16</td>\n      <td>6.9</td>\n      <td>12.5</td>\n      <td>1.3</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.1</td>\n      <td>8.9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2019/12/17</td>\n      <td>8.2</td>\n      <td>10.3</td>\n      <td>5.7</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.1</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2019/12/18</td>\n      <td>9.9</td>\n      <td>15.0</td>\n      <td>4.8</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.2</td>\n      <td>4.3</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 21
    }
   ],
   "source": [
    "columns = df.columns\n",
    "df = df[['年月日', '平均気温(℃)', '最高気温(℃)', '最低気温(℃)', '降水量の合計(mm)', '最深積雪(cm)', '平均雲量(10分比)', '平均蒸気圧(hPa)', '平均風速(m/s)', '日照時間(時間)']][1:]\n",
    "df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "年月日            object\n",
       "平均気温(℃)       float64\n",
       "最高気温(℃)       float64\n",
       "最低気温(℃)       float64\n",
       "降水量の合計(mm)    float64\n",
       "最深積雪(cm)      float64\n",
       "平均雲量(10分比)    float64\n",
       "平均蒸気圧(hPa)    float64\n",
       "平均風速(m/s)     float64\n",
       "日照時間(時間)      float64\n",
       "dtype: object"
      ]
     },
     "metadata": {},
     "execution_count": 22
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "(367, 10)"
      ]
     },
     "metadata": {},
     "execution_count": 23
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "Index(['年月日', '平均気温(℃)', '最高気温(℃)', '最低気温(℃)', '降水量の合計(mm)', '最深積雪(cm)',\n",
       "       '平均雲量(10分比)', '平均蒸気圧(hPa)', '平均風速(m/s)', '日照時間(時間)'],\n",
       "      dtype='object')"
      ]
     },
     "metadata": {},
     "execution_count": 24
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "RangeIndex(start=1, stop=368, step=1)"
      ]
     },
     "metadata": {},
     "execution_count": 25
    }
   ],
   "source": [
    "df.index\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "    最高気温(℃)  最低気温(℃)  降水量の合計(mm)  最深積雪(cm)\n",
       "5      15.0      4.8         0.0       NaN\n",
       "6       9.7      7.9         1.0       NaN\n",
       "7      15.8      5.7         0.0       NaN\n",
       "8       8.4      6.5         0.0       NaN\n",
       "9       9.8      4.2        21.0       NaN\n",
       "10     12.1      3.6         9.5       NaN"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>最高気温(℃)</th>\n      <th>最低気温(℃)</th>\n      <th>降水量の合計(mm)</th>\n      <th>最深積雪(cm)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5</th>\n      <td>15.0</td>\n      <td>4.8</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>9.7</td>\n      <td>7.9</td>\n      <td>1.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>15.8</td>\n      <td>5.7</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>8.4</td>\n      <td>6.5</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>9.8</td>\n      <td>4.2</td>\n      <td>21.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>12.1</td>\n      <td>3.6</td>\n      <td>9.5</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 28
    }
   ],
   "source": [
    "df.iloc[4:10, 2:6 ] # 行列範囲指定"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "    最高気温(℃)  最低気温(℃)  降水量の合計(mm)  最深積雪(cm)\n",
       "5      15.0      4.8         0.0       NaN\n",
       "6       9.7      7.9         1.0       NaN\n",
       "7      15.8      5.7         0.0       NaN\n",
       "8       8.4      6.5         0.0       NaN\n",
       "9       9.8      4.2        21.0       NaN\n",
       "10     12.1      3.6         9.5       NaN"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>最高気温(℃)</th>\n      <th>最低気温(℃)</th>\n      <th>降水量の合計(mm)</th>\n      <th>最深積雪(cm)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>5</th>\n      <td>15.0</td>\n      <td>4.8</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>9.7</td>\n      <td>7.9</td>\n      <td>1.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>15.8</td>\n      <td>5.7</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>8.4</td>\n      <td>6.5</td>\n      <td>0.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>9.8</td>\n      <td>4.2</td>\n      <td>21.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>12.1</td>\n      <td>3.6</td>\n      <td>9.5</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 29
    }
   ],
   "source": [
    "df.loc[5:10, '最高気温(℃)':'最深積雪(cm)'] # 行列範囲指定, 列は列名を使用, ilocと 行indexが異なるので注意"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "   age  id      name nationality\n",
       "0   26  13  Imanishi       Japan\n",
       "1   21  33      Mike     America\n",
       "2   35  31    Suzuki       Japan\n",
       "3   16  20      John     America\n",
       "4   28  11       Kim       Korea"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>id</th>\n      <th>name</th>\n      <th>nationality</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>26</td>\n      <td>13</td>\n      <td>Imanishi</td>\n      <td>Japan</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>21</td>\n      <td>33</td>\n      <td>Mike</td>\n      <td>America</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>35</td>\n      <td>31</td>\n      <td>Suzuki</td>\n      <td>Japan</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>16</td>\n      <td>20</td>\n      <td>John</td>\n      <td>America</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>28</td>\n      <td>11</td>\n      <td>Kim</td>\n      <td>Korea</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 31
    }
   ],
   "source": [
    "df_people = pd.read_csv('data/people.csv')\n",
    "df_people"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "   age  id  name nationality\n",
       "1   21  33  Mike     America\n",
       "3   16  20  John     America"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>id</th>\n      <th>name</th>\n      <th>nationality</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>21</td>\n      <td>33</td>\n      <td>Mike</td>\n      <td>America</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>16</td>\n      <td>20</td>\n      <td>John</td>\n      <td>America</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 33
    }
   ],
   "source": [
    "df_people[df_people['nationality'] == 'America'] # 条件抽出 quryメソッド"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "   age  id  name nationality\n",
       "1   21  33  Mike     America\n",
       "3   16  20  John     America"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>id</th>\n      <th>name</th>\n      <th>nationality</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>21</td>\n      <td>33</td>\n      <td>Mike</td>\n      <td>America</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>16</td>\n      <td>20</td>\n      <td>John</td>\n      <td>America</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 37
    }
   ],
   "source": [
    "df_people.query('nationality == \"America\"') # 条件抽出 quryメソッド"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "   age  id      name nationality\n",
       "0   26  13  Imanishi       Japan\n",
       "1   21  33      Mike     America\n",
       "2   35  31    Suzuki       Japan\n",
       "3   16  20      John     America"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>id</th>\n      <th>name</th>\n      <th>nationality</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>26</td>\n      <td>13</td>\n      <td>Imanishi</td>\n      <td>Japan</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>21</td>\n      <td>33</td>\n      <td>Mike</td>\n      <td>America</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>35</td>\n      <td>31</td>\n      <td>Suzuki</td>\n      <td>Japan</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>16</td>\n      <td>20</td>\n      <td>John</td>\n      <td>America</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 40
    }
   ],
   "source": [
    "df_people[df_people['nationality'].isin(['America', 'Japan'])]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "   age  id      name nationality\n",
       "0   26  13  Imanishi       Japan\n",
       "1   21  33      Mike     America\n",
       "4   28  11       Kim       Korea"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>id</th>\n      <th>name</th>\n      <th>nationality</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>26</td>\n      <td>13</td>\n      <td>Imanishi</td>\n      <td>Japan</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>21</td>\n      <td>33</td>\n      <td>Mike</td>\n      <td>America</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>28</td>\n      <td>11</td>\n      <td>Kim</td>\n      <td>Korea</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 43
    }
   ],
   "source": [
    "df_people[(df_people['age'] >=20) & (df_people['age'] < 30)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "   age  id      name nationality\n",
       "0   26  13  Imanishi       Japan\n",
       "1   21  33      Mike     America\n",
       "4   28  11       Kim       Korea"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>id</th>\n      <th>name</th>\n      <th>nationality</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>26</td>\n      <td>13</td>\n      <td>Imanishi</td>\n      <td>Japan</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>21</td>\n      <td>33</td>\n      <td>Mike</td>\n      <td>America</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>28</td>\n      <td>11</td>\n      <td>Kim</td>\n      <td>Korea</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 44
    }
   ],
   "source": [
    "df_people.query('age >= 20 & age < 30')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "array(['Japan', 'America', 'Korea'], dtype=object)"
      ]
     },
     "metadata": {},
     "execution_count": 46
    }
   ],
   "source": [
    "df_people['nationality'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "array(['Imanishi', 'Mike', 'Suzuki', 'John', 'Kim'], dtype=object)"
      ]
     },
     "metadata": {},
     "execution_count": 47
    }
   ],
   "source": [
    "df_people['name'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "array([26, 21, 35, 16, 28])"
      ]
     },
     "metadata": {},
     "execution_count": 48
    }
   ],
   "source": [
    "df_people['age'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "   age  id      name nationality\n",
       "0   26  13  Imanishi       Japan\n",
       "1   21  33      Mike     America\n",
       "4   28  11       Kim       Korea"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>id</th>\n      <th>name</th>\n      <th>nationality</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>26</td>\n      <td>13</td>\n      <td>Imanishi</td>\n      <td>Japan</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>21</td>\n      <td>33</td>\n      <td>Mike</td>\n      <td>America</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>28</td>\n      <td>11</td>\n      <td>Kim</td>\n      <td>Korea</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 50
    }
   ],
   "source": [
    "## 8 重複除去\n",
    "df_people.drop_duplicates(subset='nationality')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "          年月日  平均気温  最高気温  最低気温  降水量の合計  最深積雪  平均雲量  平均蒸気圧  平均風速  日照時間\n",
       "1  2019/12/14   9.3  15.9   3.2     0.0   NaN   NaN    NaN   2.0   8.9\n",
       "2  2019/12/15   7.8  11.1   4.0     0.0   NaN   NaN    NaN   2.3   6.3\n",
       "3  2019/12/16   6.9  12.5   1.3     0.0   NaN   NaN    NaN   1.1   8.9\n",
       "4  2019/12/17   8.2  10.3   5.7     2.0   NaN   NaN    NaN   1.1   0.2\n",
       "5  2019/12/18   9.9  15.0   4.8     0.0   NaN   NaN    NaN   1.2   4.3"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>年月日</th>\n      <th>平均気温</th>\n      <th>最高気温</th>\n      <th>最低気温</th>\n      <th>降水量の合計</th>\n      <th>最深積雪</th>\n      <th>平均雲量</th>\n      <th>平均蒸気圧</th>\n      <th>平均風速</th>\n      <th>日照時間</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>2019/12/14</td>\n      <td>9.3</td>\n      <td>15.9</td>\n      <td>3.2</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>8.9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2019/12/15</td>\n      <td>7.8</td>\n      <td>11.1</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.3</td>\n      <td>6.3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2019/12/16</td>\n      <td>6.9</td>\n      <td>12.5</td>\n      <td>1.3</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.1</td>\n      <td>8.9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2019/12/17</td>\n      <td>8.2</td>\n      <td>10.3</td>\n      <td>5.7</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.1</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2019/12/18</td>\n      <td>9.9</td>\n      <td>15.0</td>\n      <td>4.8</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.2</td>\n      <td>4.3</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 54
    }
   ],
   "source": [
    "## 9 カラム名の変更\n",
    "\n",
    "df.columns = ['年月日', '平均気温', '最高気温', '最低気温', '降水量の合計', '最深積雪', '平均雲量', '平均蒸気圧', '平均風速', '日照時間']\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "            年月日    平均  最高気温  最低気温  降水量の合計  最深積雪  平均雲量  平均蒸気圧  平均風速  日照時間\n",
       "1    2019/12/14   9.3  15.9   3.2     0.0   NaN   NaN    NaN   2.0   8.9\n",
       "2    2019/12/15   7.8  11.1   4.0     0.0   NaN   NaN    NaN   2.3   6.3\n",
       "3    2019/12/16   6.9  12.5   1.3     0.0   NaN   NaN    NaN   1.1   8.9\n",
       "4    2019/12/17   8.2  10.3   5.7     2.0   NaN   NaN    NaN   1.1   0.2\n",
       "5    2019/12/18   9.9  15.0   4.8     0.0   NaN   NaN    NaN   1.2   4.3\n",
       "..          ...   ...   ...   ...     ...   ...   ...    ...   ...   ...\n",
       "363  2020/12/10   8.7  11.1   6.0     0.5   NaN   NaN    NaN   1.4   0.0\n",
       "364  2020/12/11   9.2  13.8   3.5     0.0   NaN   NaN    NaN   0.8   4.3\n",
       "365  2020/12/12  10.4  14.0   8.0     0.0   NaN   NaN    NaN   1.4   1.4\n",
       "366  2020/12/13   8.6  14.4   4.4     0.0   NaN   NaN    NaN   1.0   5.5\n",
       "367  2020/12/14   7.8  12.2   4.4     0.0   NaN   NaN    NaN   1.9   4.4\n",
       "\n",
       "[367 rows x 10 columns]"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>年月日</th>\n      <th>平均</th>\n      <th>最高気温</th>\n      <th>最低気温</th>\n      <th>降水量の合計</th>\n      <th>最深積雪</th>\n      <th>平均雲量</th>\n      <th>平均蒸気圧</th>\n      <th>平均風速</th>\n      <th>日照時間</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>2019/12/14</td>\n      <td>9.3</td>\n      <td>15.9</td>\n      <td>3.2</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.0</td>\n      <td>8.9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2019/12/15</td>\n      <td>7.8</td>\n      <td>11.1</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.3</td>\n      <td>6.3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2019/12/16</td>\n      <td>6.9</td>\n      <td>12.5</td>\n      <td>1.3</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.1</td>\n      <td>8.9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2019/12/17</td>\n      <td>8.2</td>\n      <td>10.3</td>\n      <td>5.7</td>\n      <td>2.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.1</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2019/12/18</td>\n      <td>9.9</td>\n      <td>15.0</td>\n      <td>4.8</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.2</td>\n      <td>4.3</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>363</th>\n      <td>2020/12/10</td>\n      <td>8.7</td>\n      <td>11.1</td>\n      <td>6.0</td>\n      <td>0.5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.4</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>364</th>\n      <td>2020/12/11</td>\n      <td>9.2</td>\n      <td>13.8</td>\n      <td>3.5</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.8</td>\n      <td>4.3</td>\n    </tr>\n    <tr>\n      <th>365</th>\n      <td>2020/12/12</td>\n      <td>10.4</td>\n      <td>14.0</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.4</td>\n      <td>1.4</td>\n    </tr>\n    <tr>\n      <th>366</th>\n      <td>2020/12/13</td>\n      <td>8.6</td>\n      <td>14.4</td>\n      <td>4.4</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>5.5</td>\n    </tr>\n    <tr>\n      <th>367</th>\n      <td>2020/12/14</td>\n      <td>7.8</td>\n      <td>12.2</td>\n      <td>4.4</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.9</td>\n      <td>4.4</td>\n    </tr>\n  </tbody>\n</table>\n<p>367 rows × 10 columns</p>\n</div>"
     },
     "metadata": {},
     "execution_count": 56
    }
   ],
   "source": [
    "df.rename(columns={'平均気温': '平均'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "           年月日  平均気温  最高気温  最低気温  降水量の合計  最深積雪  平均雲量  平均蒸気圧  平均風速  日照時間\n",
       "248  2020/8/17  30.9  37.2  26.8     0.0   NaN   NaN    NaN   1.7   9.4\n",
       "244  2020/8/13  30.4  37.1  26.9     0.5   NaN   NaN    NaN   1.6   8.5\n",
       "246  2020/8/15  31.2  36.5  27.8     0.0   NaN   NaN    NaN   1.5   8.7\n",
       "243  2020/8/12  30.3  35.9  27.6     0.0   NaN   NaN    NaN   1.8   7.2\n",
       "252  2020/8/21  29.9  35.4  26.2     0.0   NaN   NaN    NaN   1.8  12.0\n",
       "..         ...   ...   ...   ...     ...   ...   ...    ...   ...   ...\n",
       "44   2020/1/26   4.6   7.0   1.7     5.5   NaN   NaN    NaN   0.9   0.0\n",
       "45   2020/1/27   4.7   6.8   3.1     3.5   NaN   NaN    NaN   1.6   0.0\n",
       "36   2020/1/18   3.8   6.2   0.9     7.5   NaN   NaN    NaN   2.5   0.0\n",
       "40   2020/1/22   4.0   6.2   1.4     0.0   NaN   NaN    NaN   1.2   0.9\n",
       "55    2020/2/6   2.3   5.5  -1.3     0.0   NaN   NaN    NaN   3.6   7.5\n",
       "\n",
       "[367 rows x 10 columns]"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>年月日</th>\n      <th>平均気温</th>\n      <th>最高気温</th>\n      <th>最低気温</th>\n      <th>降水量の合計</th>\n      <th>最深積雪</th>\n      <th>平均雲量</th>\n      <th>平均蒸気圧</th>\n      <th>平均風速</th>\n      <th>日照時間</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>248</th>\n      <td>2020/8/17</td>\n      <td>30.9</td>\n      <td>37.2</td>\n      <td>26.8</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.7</td>\n      <td>9.4</td>\n    </tr>\n    <tr>\n      <th>244</th>\n      <td>2020/8/13</td>\n      <td>30.4</td>\n      <td>37.1</td>\n      <td>26.9</td>\n      <td>0.5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.6</td>\n      <td>8.5</td>\n    </tr>\n    <tr>\n      <th>246</th>\n      <td>2020/8/15</td>\n      <td>31.2</td>\n      <td>36.5</td>\n      <td>27.8</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.5</td>\n      <td>8.7</td>\n    </tr>\n    <tr>\n      <th>243</th>\n      <td>2020/8/12</td>\n      <td>30.3</td>\n      <td>35.9</td>\n      <td>27.6</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.8</td>\n      <td>7.2</td>\n    </tr>\n    <tr>\n      <th>252</th>\n      <td>2020/8/21</td>\n      <td>29.9</td>\n      <td>35.4</td>\n      <td>26.2</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.8</td>\n      <td>12.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>2020/1/26</td>\n      <td>4.6</td>\n      <td>7.0</td>\n      <td>1.7</td>\n      <td>5.5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.9</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>2020/1/27</td>\n      <td>4.7</td>\n      <td>6.8</td>\n      <td>3.1</td>\n      <td>3.5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.6</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>2020/1/18</td>\n      <td>3.8</td>\n      <td>6.2</td>\n      <td>0.9</td>\n      <td>7.5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.5</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>2020/1/22</td>\n      <td>4.0</td>\n      <td>6.2</td>\n      <td>1.4</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.2</td>\n      <td>0.9</td>\n    </tr>\n    <tr>\n      <th>55</th>\n      <td>2020/2/6</td>\n      <td>2.3</td>\n      <td>5.5</td>\n      <td>-1.3</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3.6</td>\n      <td>7.5</td>\n    </tr>\n  </tbody>\n</table>\n<p>367 rows × 10 columns</p>\n</div>"
     },
     "metadata": {},
     "execution_count": 60
    }
   ],
   "source": [
    "## 10 並び替え\n",
    "\n",
    "df.sort_values('最高気温', ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "array(['Japan', 'America', 'Korea'], dtype=object)"
      ]
     },
     "metadata": {},
     "execution_count": 62
    }
   ],
   "source": [
    "## 11 \n",
    "\n",
    "df_people['nationality'].unique()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "   America  Japan  Korea\n",
       "0        0      1      0\n",
       "1        1      0      0\n",
       "2        0      1      0\n",
       "3        1      0      0\n",
       "4        0      0      1"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>America</th>\n      <th>Japan</th>\n      <th>Korea</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 63
    }
   ],
   "source": [
    "pd.get_dummies(df_people['nationality'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "   age  id      name  nationality_America  nationality_Japan  \\\n",
       "0   26  13  Imanishi                    0                  1   \n",
       "1   21  33      Mike                    1                  0   \n",
       "2   35  31    Suzuki                    0                  1   \n",
       "3   16  20      John                    1                  0   \n",
       "4   28  11       Kim                    0                  0   \n",
       "\n",
       "   nationality_Korea  \n",
       "0                  0  \n",
       "1                  0  \n",
       "2                  0  \n",
       "3                  0  \n",
       "4                  1  "
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>id</th>\n      <th>name</th>\n      <th>nationality_America</th>\n      <th>nationality_Japan</th>\n      <th>nationality_Korea</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>26</td>\n      <td>13</td>\n      <td>Imanishi</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>21</td>\n      <td>33</td>\n      <td>Mike</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>35</td>\n      <td>31</td>\n      <td>Suzuki</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>16</td>\n      <td>20</td>\n      <td>John</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>28</td>\n      <td>11</td>\n      <td>Kim</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 64
    }
   ],
   "source": [
    "pd.get_dummies(df_people, columns=['nationality'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "       年月日   平均気温   最高気温   最低気温  降水量の合計  最深積雪  平均雲量  平均蒸気圧   平均風速   日照時間\n",
       "1    False  False  False  False   False  True  True   True  False  False\n",
       "2    False  False  False  False   False  True  True   True  False  False\n",
       "3    False  False  False  False   False  True  True   True  False  False\n",
       "4    False  False  False  False   False  True  True   True  False  False\n",
       "5    False  False  False  False   False  True  True   True  False  False\n",
       "..     ...    ...    ...    ...     ...   ...   ...    ...    ...    ...\n",
       "363  False  False  False  False   False  True  True   True  False  False\n",
       "364  False  False  False  False   False  True  True   True  False  False\n",
       "365  False  False  False  False   False  True  True   True  False  False\n",
       "366  False  False  False  False   False  True  True   True  False  False\n",
       "367  False  False  False  False   False  True  True   True  False  False\n",
       "\n",
       "[367 rows x 10 columns]"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>年月日</th>\n      <th>平均気温</th>\n      <th>最高気温</th>\n      <th>最低気温</th>\n      <th>降水量の合計</th>\n      <th>最深積雪</th>\n      <th>平均雲量</th>\n      <th>平均蒸気圧</th>\n      <th>平均風速</th>\n      <th>日照時間</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>363</th>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>364</th>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>365</th>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>366</th>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n    <tr>\n      <th>367</th>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>False</td>\n      <td>True</td>\n      <td>True</td>\n      <td>True</td>\n      <td>False</td>\n      <td>False</td>\n    </tr>\n  </tbody>\n</table>\n<p>367 rows × 10 columns</p>\n</div>"
     },
     "metadata": {},
     "execution_count": 66
    }
   ],
   "source": [
    "## 12 欠損値の確認\n",
    "\n",
    "df.isnull()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "            年月日  平均気温  最高気温  最低気温  降水量の合計  最深積雪  平均雲量  平均蒸気圧  平均風速  日照時間\n",
       "1    2019/12/14   9.3  15.9   3.2     0.0   0.0   0.0    0.0   2.0   8.9\n",
       "2    2019/12/15   7.8  11.1   4.0     0.0   0.0   0.0    0.0   2.3   6.3\n",
       "3    2019/12/16   6.9  12.5   1.3     0.0   0.0   0.0    0.0   1.1   8.9\n",
       "4    2019/12/17   8.2  10.3   5.7     2.0   0.0   0.0    0.0   1.1   0.2\n",
       "5    2019/12/18   9.9  15.0   4.8     0.0   0.0   0.0    0.0   1.2   4.3\n",
       "..          ...   ...   ...   ...     ...   ...   ...    ...   ...   ...\n",
       "363  2020/12/10   8.7  11.1   6.0     0.5   0.0   0.0    0.0   1.4   0.0\n",
       "364  2020/12/11   9.2  13.8   3.5     0.0   0.0   0.0    0.0   0.8   4.3\n",
       "365  2020/12/12  10.4  14.0   8.0     0.0   0.0   0.0    0.0   1.4   1.4\n",
       "366  2020/12/13   8.6  14.4   4.4     0.0   0.0   0.0    0.0   1.0   5.5\n",
       "367  2020/12/14   7.8  12.2   4.4     0.0   0.0   0.0    0.0   1.9   4.4\n",
       "\n",
       "[367 rows x 10 columns]"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>年月日</th>\n      <th>平均気温</th>\n      <th>最高気温</th>\n      <th>最低気温</th>\n      <th>降水量の合計</th>\n      <th>最深積雪</th>\n      <th>平均雲量</th>\n      <th>平均蒸気圧</th>\n      <th>平均風速</th>\n      <th>日照時間</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>2019/12/14</td>\n      <td>9.3</td>\n      <td>15.9</td>\n      <td>3.2</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>8.9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2019/12/15</td>\n      <td>7.8</td>\n      <td>11.1</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.3</td>\n      <td>6.3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2019/12/16</td>\n      <td>6.9</td>\n      <td>12.5</td>\n      <td>1.3</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.1</td>\n      <td>8.9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2019/12/17</td>\n      <td>8.2</td>\n      <td>10.3</td>\n      <td>5.7</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.1</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2019/12/18</td>\n      <td>9.9</td>\n      <td>15.0</td>\n      <td>4.8</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.2</td>\n      <td>4.3</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>363</th>\n      <td>2020/12/10</td>\n      <td>8.7</td>\n      <td>11.1</td>\n      <td>6.0</td>\n      <td>0.5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.4</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>364</th>\n      <td>2020/12/11</td>\n      <td>9.2</td>\n      <td>13.8</td>\n      <td>3.5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.8</td>\n      <td>4.3</td>\n    </tr>\n    <tr>\n      <th>365</th>\n      <td>2020/12/12</td>\n      <td>10.4</td>\n      <td>14.0</td>\n      <td>8.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.4</td>\n      <td>1.4</td>\n    </tr>\n    <tr>\n      <th>366</th>\n      <td>2020/12/13</td>\n      <td>8.6</td>\n      <td>14.4</td>\n      <td>4.4</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>5.5</td>\n    </tr>\n    <tr>\n      <th>367</th>\n      <td>2020/12/14</td>\n      <td>7.8</td>\n      <td>12.2</td>\n      <td>4.4</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.9</td>\n      <td>4.4</td>\n    </tr>\n  </tbody>\n</table>\n<p>367 rows × 10 columns</p>\n</div>"
     },
     "metadata": {},
     "execution_count": 67
    }
   ],
   "source": [
    "## 13 欠損値の補完\n",
    "\n",
    "df.fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "年月日         0\n",
       "平均気温        0\n",
       "最高気温        0\n",
       "最低気温        0\n",
       "降水量の合計      0\n",
       "最深積雪      367\n",
       "平均雲量      367\n",
       "平均蒸気圧     367\n",
       "平均風速        0\n",
       "日照時間        0\n",
       "dtype: int64"
      ]
     },
     "metadata": {},
     "execution_count": 70
    }
   ],
   "source": [
    "## 14 欠損値の削除\n",
    "\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "          年月日  平均気温  最高気温  最低気温  降水量の合計  平均風速  日照時間\n",
       "1  2019/12/14   9.3  15.9   3.2     0.0   2.0   8.9\n",
       "2  2019/12/15   7.8  11.1   4.0     0.0   2.3   6.3\n",
       "3  2019/12/16   6.9  12.5   1.3     0.0   1.1   8.9\n",
       "4  2019/12/17   8.2  10.3   5.7     2.0   1.1   0.2\n",
       "5  2019/12/18   9.9  15.0   4.8     0.0   1.2   4.3"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>年月日</th>\n      <th>平均気温</th>\n      <th>最高気温</th>\n      <th>最低気温</th>\n      <th>降水量の合計</th>\n      <th>平均風速</th>\n      <th>日照時間</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>2019/12/14</td>\n      <td>9.3</td>\n      <td>15.9</td>\n      <td>3.2</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>8.9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2019/12/15</td>\n      <td>7.8</td>\n      <td>11.1</td>\n      <td>4.0</td>\n      <td>0.0</td>\n      <td>2.3</td>\n      <td>6.3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2019/12/16</td>\n      <td>6.9</td>\n      <td>12.5</td>\n      <td>1.3</td>\n      <td>0.0</td>\n      <td>1.1</td>\n      <td>8.9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2019/12/17</td>\n      <td>8.2</td>\n      <td>10.3</td>\n      <td>5.7</td>\n      <td>2.0</td>\n      <td>1.1</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2019/12/18</td>\n      <td>9.9</td>\n      <td>15.0</td>\n      <td>4.8</td>\n      <td>0.0</td>\n      <td>1.2</td>\n      <td>4.3</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 71
    }
   ],
   "source": [
    "df.dropna(axis=1).head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "   sepal-length  sepal-width  petal-length  petal-width        Class\n",
       "0           5.1          3.5           1.4          0.2  Iris-setosa\n",
       "1           4.9          3.0           1.4          0.2  Iris-setosa\n",
       "2           4.7          3.2           1.3          0.2  Iris-setosa\n",
       "3           4.6          3.1           1.5          0.2  Iris-setosa\n",
       "4           5.0          3.6           1.4          0.2  Iris-setosa"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal-length</th>\n      <th>sepal-width</th>\n      <th>petal-length</th>\n      <th>petal-width</th>\n      <th>Class</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 75
    }
   ],
   "source": [
    "## 15 uniqueな値\n",
    "\n",
    "df_iris = pd.read_csv('data/iris.csv')\n",
    "df_iris.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "Iris-versicolor    53\n",
       "Iris-virginica     53\n",
       "Iris-setosa        50\n",
       "Name: Class, dtype: int64"
      ]
     },
     "metadata": {},
     "execution_count": 76
    }
   ],
   "source": [
    "df_iris['Class'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "                 sepal-length  sepal-width  petal-length  petal-width\n",
       "Class                                                                \n",
       "Iris-setosa          5.004255     3.434000      1.454000     0.244000\n",
       "Iris-versicolor      6.403774     2.762264      4.307547     1.352830\n",
       "Iris-virginica       6.937736     2.979245      5.526415     2.013208"
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal-length</th>\n      <th>sepal-width</th>\n      <th>petal-length</th>\n      <th>petal-width</th>\n    </tr>\n    <tr>\n      <th>Class</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Iris-setosa</th>\n      <td>5.004255</td>\n      <td>3.434000</td>\n      <td>1.454000</td>\n      <td>0.244000</td>\n    </tr>\n    <tr>\n      <th>Iris-versicolor</th>\n      <td>6.403774</td>\n      <td>2.762264</td>\n      <td>4.307547</td>\n      <td>1.352830</td>\n    </tr>\n    <tr>\n      <th>Iris-virginica</th>\n      <td>6.937736</td>\n      <td>2.979245</td>\n      <td>5.526415</td>\n      <td>2.013208</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 78
    }
   ],
   "source": [
    "## 16 グループごとの集計\n",
    "\n",
    "df_iris.groupby('Class').mean() # 平均値"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "             平均気温        最高気温        最低気温      降水量の合計  最深積雪  平均雲量  平均蒸気圧  \\\n",
       "count  367.000000  367.000000  367.000000  367.000000   0.0   0.0    0.0   \n",
       "mean    16.213896   20.466757   12.536785    3.882834   NaN   NaN    NaN   \n",
       "std      7.597900    7.771437    8.147217   10.198369   NaN   NaN    NaN   \n",
       "min      1.800000    5.500000   -4.300000    0.000000   NaN   NaN    NaN   \n",
       "25%      9.350000   13.950000    5.600000    0.000000   NaN   NaN    NaN   \n",
       "50%     15.300000   19.900000   10.900000    0.000000   NaN   NaN    NaN   \n",
       "75%     22.550000   26.850000   19.450000    1.750000   NaN   NaN    NaN   \n",
       "max     31.200000   37.200000   27.800000   77.500000   NaN   NaN    NaN   \n",
       "\n",
       "             平均風速        日照時間  \n",
       "count  367.000000  367.000000  \n",
       "mean     1.848774    5.118256  \n",
       "std      0.704119    4.237862  \n",
       "min      0.700000    0.000000  \n",
       "25%      1.400000    0.400000  \n",
       "50%      1.700000    4.800000  \n",
       "75%      2.200000    9.100000  \n",
       "max      4.400000   13.500000  "
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>平均気温</th>\n      <th>最高気温</th>\n      <th>最低気温</th>\n      <th>降水量の合計</th>\n      <th>最深積雪</th>\n      <th>平均雲量</th>\n      <th>平均蒸気圧</th>\n      <th>平均風速</th>\n      <th>日照時間</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>367.000000</td>\n      <td>367.000000</td>\n      <td>367.000000</td>\n      <td>367.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>367.000000</td>\n      <td>367.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>16.213896</td>\n      <td>20.466757</td>\n      <td>12.536785</td>\n      <td>3.882834</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.848774</td>\n      <td>5.118256</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>7.597900</td>\n      <td>7.771437</td>\n      <td>8.147217</td>\n      <td>10.198369</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.704119</td>\n      <td>4.237862</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.800000</td>\n      <td>5.500000</td>\n      <td>-4.300000</td>\n      <td>0.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.700000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>9.350000</td>\n      <td>13.950000</td>\n      <td>5.600000</td>\n      <td>0.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.400000</td>\n      <td>0.400000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>15.300000</td>\n      <td>19.900000</td>\n      <td>10.900000</td>\n      <td>0.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.700000</td>\n      <td>4.800000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>22.550000</td>\n      <td>26.850000</td>\n      <td>19.450000</td>\n      <td>1.750000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.200000</td>\n      <td>9.100000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>31.200000</td>\n      <td>37.200000</td>\n      <td>27.800000</td>\n      <td>77.500000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>4.400000</td>\n      <td>13.500000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 83
    }
   ],
   "source": [
    "## 17 統計量の確認\n",
    "\n",
    "df.mean()\n",
    "df.median() # 中央値\n",
    "df.std() # 標準偏差\n",
    "df.max()\n",
    "df.min()\n",
    "\n",
    "df.describe() # 標準集約\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='年月日'>"
      ]
     },
     "metadata": {},
     "execution_count": 88
    },
    {
     "output_type": "display_data",
     "data": {
      "text/plain": "<Figure size 432x288 with 1 Axes>",
      "image/svg+xml": "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Created with matplotlib (https://matplotlib.org/) -->\n<svg height=\"262.19625pt\" version=\"1.1\" viewBox=\"0 0 378.465625 262.19625\" width=\"378.465625pt\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n <metadata>\n  <rdf:RDF xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n   <cc:Work>\n    <dc:type rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\"/>\n    <dc:date>2021-02-04T22:35:03.802727</dc:date>\n    <dc:format>image/svg+xml</dc:format>\n    <dc:creator>\n     <cc:Agent>\n      <dc:title>Matplotlib v3.3.4, https://matplotlib.org/</dc:title>\n     </cc:Agent>\n    </dc:creator>\n   </cc:Work>\n  </rdf:RDF>\n </metadata>\n <defs>\n  <style type=\"text/css\">*{stroke-linecap:butt;stroke-linejoin:round;}</style>\n </defs>\n <g id=\"figure_1\">\n  <g id=\"patch_1\">\n   <path d=\"M 0 262.19625 \nL 378.465625 262.19625 \nL 378.465625 0 \nL 0 0 \nz\n\" style=\"fill:none;\"/>\n  </g>\n  <g id=\"axes_1\">\n   <g id=\"patch_2\">\n    <path d=\"M 36.465625 224.64 \nL 371.265625 224.64 \nL 371.265625 7.2 \nL 36.465625 7.2 \nz\n\" style=\"fill:#ffffff;\"/>\n   </g>\n   <g id=\"matplotlib.axis_1\">\n    <g id=\"xtick_1\">\n     <g id=\"line2d_1\">\n      <defs>\n       <path d=\"M 0 0 \nL 0 3.5 \n\" id=\"m1bdf2fabe5\" style=\"stroke:#000000;stroke-width:0.8;\"/>\n      </defs>\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"51.683807\" xlink:href=\"#m1bdf2fabe5\" y=\"224.64\"/>\n      </g>\n     </g>\n     <g id=\"text_1\">\n      <!-- 2019/12/14 -->\n      <g transform=\"translate(22.865057 239.238437)scale(0.1 -0.1)\">\n       <defs>\n        <path d=\"M 19.1875 8.296875 \nL 53.609375 8.296875 \nL 53.609375 0 \nL 7.328125 0 \nL 7.328125 8.296875 \nQ 12.9375 14.109375 22.625 23.890625 \nQ 32.328125 33.6875 34.8125 36.53125 \nQ 39.546875 41.84375 41.421875 45.53125 \nQ 43.3125 49.21875 43.3125 52.78125 \nQ 43.3125 58.59375 39.234375 62.25 \nQ 35.15625 65.921875 28.609375 65.921875 \nQ 23.96875 65.921875 18.8125 64.3125 \nQ 13.671875 62.703125 7.8125 59.421875 \nL 7.8125 69.390625 \nQ 13.765625 71.78125 18.9375 73 \nQ 24.125 74.21875 28.421875 74.21875 \nQ 39.75 74.21875 46.484375 68.546875 \nQ 53.21875 62.890625 53.21875 53.421875 \nQ 53.21875 48.921875 51.53125 44.890625 \nQ 49.859375 40.875 45.40625 35.40625 \nQ 44.1875 33.984375 37.640625 27.21875 \nQ 31.109375 20.453125 19.1875 8.296875 \nz\n\" id=\"DejaVuSans-50\"/>\n        <path d=\"M 31.78125 66.40625 \nQ 24.171875 66.40625 20.328125 58.90625 \nQ 16.5 51.421875 16.5 36.375 \nQ 16.5 21.390625 20.328125 13.890625 \nQ 24.171875 6.390625 31.78125 6.390625 \nQ 39.453125 6.390625 43.28125 13.890625 \nQ 47.125 21.390625 47.125 36.375 \nQ 47.125 51.421875 43.28125 58.90625 \nQ 39.453125 66.40625 31.78125 66.40625 \nz\nM 31.78125 74.21875 \nQ 44.046875 74.21875 50.515625 64.515625 \nQ 56.984375 54.828125 56.984375 36.375 \nQ 56.984375 17.96875 50.515625 8.265625 \nQ 44.046875 -1.421875 31.78125 -1.421875 \nQ 19.53125 -1.421875 13.0625 8.265625 \nQ 6.59375 17.96875 6.59375 36.375 \nQ 6.59375 54.828125 13.0625 64.515625 \nQ 19.53125 74.21875 31.78125 74.21875 \nz\n\" id=\"DejaVuSans-48\"/>\n        <path d=\"M 12.40625 8.296875 \nL 28.515625 8.296875 \nL 28.515625 63.921875 \nL 10.984375 60.40625 \nL 10.984375 69.390625 \nL 28.421875 72.90625 \nL 38.28125 72.90625 \nL 38.28125 8.296875 \nL 54.390625 8.296875 \nL 54.390625 0 \nL 12.40625 0 \nz\n\" id=\"DejaVuSans-49\"/>\n        <path d=\"M 10.984375 1.515625 \nL 10.984375 10.5 \nQ 14.703125 8.734375 18.5 7.8125 \nQ 22.3125 6.890625 25.984375 6.890625 \nQ 35.75 6.890625 40.890625 13.453125 \nQ 46.046875 20.015625 46.78125 33.40625 \nQ 43.953125 29.203125 39.59375 26.953125 \nQ 35.25 24.703125 29.984375 24.703125 \nQ 19.046875 24.703125 12.671875 31.3125 \nQ 6.296875 37.9375 6.296875 49.421875 \nQ 6.296875 60.640625 12.9375 67.421875 \nQ 19.578125 74.21875 30.609375 74.21875 \nQ 43.265625 74.21875 49.921875 64.515625 \nQ 56.59375 54.828125 56.59375 36.375 \nQ 56.59375 19.140625 48.40625 8.859375 \nQ 40.234375 -1.421875 26.421875 -1.421875 \nQ 22.703125 -1.421875 18.890625 -0.6875 \nQ 15.09375 0.046875 10.984375 1.515625 \nz\nM 30.609375 32.421875 \nQ 37.25 32.421875 41.125 36.953125 \nQ 45.015625 41.5 45.015625 49.421875 \nQ 45.015625 57.28125 41.125 61.84375 \nQ 37.25 66.40625 30.609375 66.40625 \nQ 23.96875 66.40625 20.09375 61.84375 \nQ 16.21875 57.28125 16.21875 49.421875 \nQ 16.21875 41.5 20.09375 36.953125 \nQ 23.96875 32.421875 30.609375 32.421875 \nz\n\" id=\"DejaVuSans-57\"/>\n        <path d=\"M 25.390625 72.90625 \nL 33.6875 72.90625 \nL 8.296875 -9.28125 \nL 0 -9.28125 \nz\n\" id=\"DejaVuSans-47\"/>\n        <path d=\"M 37.796875 64.3125 \nL 12.890625 25.390625 \nL 37.796875 25.390625 \nz\nM 35.203125 72.90625 \nL 47.609375 72.90625 \nL 47.609375 25.390625 \nL 58.015625 25.390625 \nL 58.015625 17.1875 \nL 47.609375 17.1875 \nL 47.609375 0 \nL 37.796875 0 \nL 37.796875 17.1875 \nL 4.890625 17.1875 \nL 4.890625 26.703125 \nz\n\" id=\"DejaVuSans-52\"/>\n       </defs>\n       <use xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-57\"/>\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-47\"/>\n       <use x=\"288.183594\" xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"351.806641\" xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"415.429688\" xlink:href=\"#DejaVuSans-47\"/>\n       <use x=\"449.121094\" xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"512.744141\" xlink:href=\"#DejaVuSans-52\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_2\">\n     <g id=\"line2d_2\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"113.798835\" xlink:href=\"#m1bdf2fabe5\" y=\"224.64\"/>\n      </g>\n     </g>\n     <g id=\"text_2\">\n      <!-- 2019/12/24 -->\n      <g transform=\"translate(84.980085 239.238437)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-57\"/>\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-47\"/>\n       <use x=\"288.183594\" xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"351.806641\" xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"415.429688\" xlink:href=\"#DejaVuSans-47\"/>\n       <use x=\"449.121094\" xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"512.744141\" xlink:href=\"#DejaVuSans-52\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_3\">\n     <g id=\"line2d_3\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"175.913862\" xlink:href=\"#m1bdf2fabe5\" y=\"224.64\"/>\n      </g>\n     </g>\n     <g id=\"text_3\">\n      <!-- 2020/1/3 -->\n      <g transform=\"translate(153.457612 239.238437)scale(0.1 -0.1)\">\n       <defs>\n        <path d=\"M 40.578125 39.3125 \nQ 47.65625 37.796875 51.625 33 \nQ 55.609375 28.21875 55.609375 21.1875 \nQ 55.609375 10.40625 48.1875 4.484375 \nQ 40.765625 -1.421875 27.09375 -1.421875 \nQ 22.515625 -1.421875 17.65625 -0.515625 \nQ 12.796875 0.390625 7.625 2.203125 \nL 7.625 11.71875 \nQ 11.71875 9.328125 16.59375 8.109375 \nQ 21.484375 6.890625 26.8125 6.890625 \nQ 36.078125 6.890625 40.9375 10.546875 \nQ 45.796875 14.203125 45.796875 21.1875 \nQ 45.796875 27.640625 41.28125 31.265625 \nQ 36.765625 34.90625 28.71875 34.90625 \nL 20.21875 34.90625 \nL 20.21875 43.015625 \nL 29.109375 43.015625 \nQ 36.375 43.015625 40.234375 45.921875 \nQ 44.09375 48.828125 44.09375 54.296875 \nQ 44.09375 59.90625 40.109375 62.90625 \nQ 36.140625 65.921875 28.71875 65.921875 \nQ 24.65625 65.921875 20.015625 65.03125 \nQ 15.375 64.15625 9.8125 62.3125 \nL 9.8125 71.09375 \nQ 15.4375 72.65625 20.34375 73.4375 \nQ 25.25 74.21875 29.59375 74.21875 \nQ 40.828125 74.21875 47.359375 69.109375 \nQ 53.90625 64.015625 53.90625 55.328125 \nQ 53.90625 49.265625 50.4375 45.09375 \nQ 46.96875 40.921875 40.578125 39.3125 \nz\n\" id=\"DejaVuSans-51\"/>\n       </defs>\n       <use xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-48\"/>\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-47\"/>\n       <use x=\"288.183594\" xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"351.806641\" xlink:href=\"#DejaVuSans-47\"/>\n       <use x=\"385.498047\" xlink:href=\"#DejaVuSans-51\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_4\">\n     <g id=\"line2d_4\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"238.02889\" xlink:href=\"#m1bdf2fabe5\" y=\"224.64\"/>\n      </g>\n     </g>\n     <g id=\"text_4\">\n      <!-- 2020/1/13 -->\n      <g transform=\"translate(212.39139 239.238437)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-48\"/>\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-47\"/>\n       <use x=\"288.183594\" xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"351.806641\" xlink:href=\"#DejaVuSans-47\"/>\n       <use x=\"385.498047\" xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"449.121094\" xlink:href=\"#DejaVuSans-51\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_5\">\n     <g id=\"line2d_5\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"300.143918\" xlink:href=\"#m1bdf2fabe5\" y=\"224.64\"/>\n      </g>\n     </g>\n     <g id=\"text_5\">\n      <!-- 2020/1/23 -->\n      <g transform=\"translate(274.506418 239.238437)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"190.869141\" xlink:href=\"#DejaVuSans-48\"/>\n       <use x=\"254.492188\" xlink:href=\"#DejaVuSans-47\"/>\n       <use x=\"288.183594\" xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"351.806641\" xlink:href=\"#DejaVuSans-47\"/>\n       <use x=\"385.498047\" xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"449.121094\" xlink:href=\"#DejaVuSans-51\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_6\">\n     <g id=\"line2d_6\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"362.258946\" xlink:href=\"#m1bdf2fabe5\" y=\"224.64\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"text_6\">\n     <!-- 年月日 -->\n     <g transform=\"translate(194.863281 252.916562)scale(0.1 -0.1)\">\n      <defs>\n       <path d=\"M 4.984375 -17.671875 \nL 4.984375 70.515625 \nL 54.984375 70.515625 \nL 54.984375 -17.671875 \nz\nM 10.59375 -12.109375 \nL 49.421875 -12.109375 \nL 49.421875 64.890625 \nL 10.59375 64.890625 \nz\n\" id=\"DejaVuSans-24180\"/>\n       <path d=\"M 4.984375 -17.671875 \nL 4.984375 70.515625 \nL 54.984375 70.515625 \nL 54.984375 -17.671875 \nz\nM 10.59375 -12.109375 \nL 49.421875 -12.109375 \nL 49.421875 64.890625 \nL 10.59375 64.890625 \nz\n\" id=\"DejaVuSans-26376\"/>\n       <path d=\"M 4.984375 -17.671875 \nL 4.984375 70.515625 \nL 54.984375 70.515625 \nL 54.984375 -17.671875 \nz\nM 10.59375 -12.109375 \nL 49.421875 -12.109375 \nL 49.421875 64.890625 \nL 10.59375 64.890625 \nz\n\" id=\"DejaVuSans-26085\"/>\n      </defs>\n      <use xlink:href=\"#DejaVuSans-24180\"/>\n      <use x=\"60.009766\" xlink:href=\"#DejaVuSans-26376\"/>\n      <use x=\"120.019531\" xlink:href=\"#DejaVuSans-26085\"/>\n     </g>\n    </g>\n   </g>\n   <g id=\"matplotlib.axis_2\">\n    <g id=\"ytick_1\">\n     <g id=\"line2d_7\">\n      <defs>\n       <path d=\"M 0 0 \nL -3.5 0 \n\" id=\"mc24349e6da\" style=\"stroke:#000000;stroke-width:0.8;\"/>\n      </defs>\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#mc24349e6da\" y=\"203.82973\"/>\n      </g>\n     </g>\n     <g id=\"text_7\">\n      <!-- 0.0 -->\n      <g transform=\"translate(13.5625 207.628949)scale(0.1 -0.1)\">\n       <defs>\n        <path d=\"M 10.6875 12.40625 \nL 21 12.40625 \nL 21 0 \nL 10.6875 0 \nz\n\" id=\"DejaVuSans-46\"/>\n       </defs>\n       <use xlink:href=\"#DejaVuSans-48\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-46\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-48\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_2\">\n     <g id=\"line2d_8\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#mc24349e6da\" y=\"178.996473\"/>\n      </g>\n     </g>\n     <g id=\"text_8\">\n      <!-- 2.5 -->\n      <g transform=\"translate(13.5625 182.795692)scale(0.1 -0.1)\">\n       <defs>\n        <path d=\"M 10.796875 72.90625 \nL 49.515625 72.90625 \nL 49.515625 64.59375 \nL 19.828125 64.59375 \nL 19.828125 46.734375 \nQ 21.96875 47.46875 24.109375 47.828125 \nQ 26.265625 48.1875 28.421875 48.1875 \nQ 40.625 48.1875 47.75 41.5 \nQ 54.890625 34.8125 54.890625 23.390625 \nQ 54.890625 11.625 47.5625 5.09375 \nQ 40.234375 -1.421875 26.90625 -1.421875 \nQ 22.3125 -1.421875 17.546875 -0.640625 \nQ 12.796875 0.140625 7.71875 1.703125 \nL 7.71875 11.625 \nQ 12.109375 9.234375 16.796875 8.0625 \nQ 21.484375 6.890625 26.703125 6.890625 \nQ 35.15625 6.890625 40.078125 11.328125 \nQ 45.015625 15.765625 45.015625 23.390625 \nQ 45.015625 31 40.078125 35.4375 \nQ 35.15625 39.890625 26.703125 39.890625 \nQ 22.75 39.890625 18.8125 39.015625 \nQ 14.890625 38.140625 10.796875 36.28125 \nz\n\" id=\"DejaVuSans-53\"/>\n       </defs>\n       <use xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-46\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-53\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_3\">\n     <g id=\"line2d_9\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#mc24349e6da\" y=\"154.163216\"/>\n      </g>\n     </g>\n     <g id=\"text_9\">\n      <!-- 5.0 -->\n      <g transform=\"translate(13.5625 157.962435)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-53\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-46\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-48\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_4\">\n     <g id=\"line2d_10\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#mc24349e6da\" y=\"129.329959\"/>\n      </g>\n     </g>\n     <g id=\"text_10\">\n      <!-- 7.5 -->\n      <g transform=\"translate(13.5625 133.129178)scale(0.1 -0.1)\">\n       <defs>\n        <path d=\"M 8.203125 72.90625 \nL 55.078125 72.90625 \nL 55.078125 68.703125 \nL 28.609375 0 \nL 18.3125 0 \nL 43.21875 64.59375 \nL 8.203125 64.59375 \nz\n\" id=\"DejaVuSans-55\"/>\n       </defs>\n       <use xlink:href=\"#DejaVuSans-55\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-46\"/>\n       <use x=\"95.410156\" xlink:href=\"#DejaVuSans-53\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_5\">\n     <g id=\"line2d_11\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#mc24349e6da\" y=\"104.496702\"/>\n      </g>\n     </g>\n     <g id=\"text_11\">\n      <!-- 10.0 -->\n      <g transform=\"translate(7.2 108.29592)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-48\"/>\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-46\"/>\n       <use x=\"159.033203\" xlink:href=\"#DejaVuSans-48\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_6\">\n     <g id=\"line2d_12\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#mc24349e6da\" y=\"79.663444\"/>\n      </g>\n     </g>\n     <g id=\"text_12\">\n      <!-- 12.5 -->\n      <g transform=\"translate(7.2 83.462663)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-50\"/>\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-46\"/>\n       <use x=\"159.033203\" xlink:href=\"#DejaVuSans-53\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_7\">\n     <g id=\"line2d_13\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#mc24349e6da\" y=\"54.830187\"/>\n      </g>\n     </g>\n     <g id=\"text_13\">\n      <!-- 15.0 -->\n      <g transform=\"translate(7.2 58.629406)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-53\"/>\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-46\"/>\n       <use x=\"159.033203\" xlink:href=\"#DejaVuSans-48\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_8\">\n     <g id=\"line2d_14\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.8;\" x=\"36.465625\" xlink:href=\"#mc24349e6da\" y=\"29.99693\"/>\n      </g>\n     </g>\n     <g id=\"text_14\">\n      <!-- 17.5 -->\n      <g transform=\"translate(7.2 33.796149)scale(0.1 -0.1)\">\n       <use xlink:href=\"#DejaVuSans-49\"/>\n       <use x=\"63.623047\" xlink:href=\"#DejaVuSans-55\"/>\n       <use x=\"127.246094\" xlink:href=\"#DejaVuSans-46\"/>\n       <use x=\"159.033203\" xlink:href=\"#DejaVuSans-53\"/>\n      </g>\n     </g>\n    </g>\n   </g>\n   <g id=\"line2d_15\">\n    <path clip-path=\"url(#pd8ed6c57f8)\" d=\"M 51.683807 111.450014 \nL 57.89531 126.349968 \nL 64.106812 135.289941 \nL 70.318315 122.376647 \nL 76.529818 105.490032 \nL 82.741321 118.403326 \nL 88.952824 103.503371 \nL 95.164326 130.323289 \nL 101.375829 139.263262 \nL 107.587332 137.276601 \nL 113.798835 129.329959 \nL 120.010337 151.183225 \nL 126.22184 129.329959 \nL 132.433343 120.389986 \nL 138.644846 139.263262 \nL 144.856349 137.276601 \nL 151.067851 145.223243 \nL 157.279354 117.409995 \nL 163.490857 155.156546 \nL 169.70236 150.189895 \nL 175.913862 146.216574 \nL 182.125365 145.223243 \nL 188.336868 154.163216 \nL 194.548371 147.209904 \nL 200.759874 151.183225 \nL 206.971376 153.169886 \nL 213.182879 96.550059 \nL 219.394382 135.289941 \nL 225.605885 144.229913 \nL 231.817388 147.209904 \nL 238.02889 125.356638 \nL 244.240393 122.376647 \nL 250.451896 135.289941 \nL 256.663399 141.249922 \nL 262.874901 137.276601 \nL 269.086404 166.08318 \nL 275.297907 142.243253 \nL 281.50941 133.30328 \nL 287.720913 142.243253 \nL 293.932415 164.096519 \nL 300.143918 149.196565 \nL 306.355421 105.490032 \nL 312.566924 132.30995 \nL 318.778426 158.136537 \nL 324.989929 157.143207 \nL 331.201432 153.169886 \nL 337.412935 81.650105 \nL 343.624438 91.583408 \nL 349.83594 124.363307 \nL 356.047443 137.276601 \n\" style=\"fill:none;stroke:#1f77b4;stroke-linecap:square;stroke-width:1.5;\"/>\n   </g>\n   <g id=\"line2d_16\">\n    <path clip-path=\"url(#pd8ed6c57f8)\" d=\"M 51.683807 45.890215 \nL 57.89531 93.570069 \nL 64.106812 79.663444 \nL 70.318315 101.516711 \nL 76.529818 54.830187 \nL 82.741321 107.476693 \nL 88.952824 46.883545 \nL 95.164326 120.389986 \nL 101.375829 106.483362 \nL 107.587332 83.636766 \nL 113.798835 83.636766 \nL 120.010337 125.356638 \nL 126.22184 82.643435 \nL 132.433343 58.803508 \nL 138.644846 103.503371 \nL 144.856349 92.576738 \nL 151.067851 133.30328 \nL 157.279354 17.083636 \nL 163.490857 110.456683 \nL 169.70236 100.523381 \nL 175.913862 78.670114 \nL 182.125365 90.590078 \nL 188.336868 108.470023 \nL 194.548371 85.623426 \nL 200.759874 122.376647 \nL 206.971376 133.30328 \nL 213.182879 59.796839 \nL 219.394382 94.563399 \nL 225.605885 97.54339 \nL 231.817388 118.403326 \nL 238.02889 75.690123 \nL 244.240393 74.696793 \nL 250.451896 116.416665 \nL 256.663399 105.490032 \nL 262.874901 103.503371 \nL 269.086404 142.243253 \nL 275.297907 106.483362 \nL 281.50941 68.736811 \nL 287.720913 104.496702 \nL 293.932415 142.243253 \nL 300.143918 130.323289 \nL 306.355421 66.750151 \nL 312.566924 108.470023 \nL 318.778426 134.29661 \nL 324.989929 136.283271 \nL 331.201432 111.450014 \nL 337.412935 33.970251 \nL 343.624438 47.876875 \nL 349.83594 96.550059 \nL 356.047443 81.650105 \n\" style=\"fill:none;stroke:#ff7f0e;stroke-linecap:square;stroke-width:1.5;\"/>\n   </g>\n   <g id=\"line2d_17\">\n    <path clip-path=\"url(#pd8ed6c57f8)\" d=\"M 51.683807 172.043161 \nL 57.89531 164.096519 \nL 64.106812 190.916437 \nL 70.318315 147.209904 \nL 76.529818 156.149877 \nL 82.741321 125.356638 \nL 88.952824 147.209904 \nL 95.164326 139.263262 \nL 101.375829 162.109858 \nL 107.587332 168.06984 \nL 113.798835 163.103189 \nL 120.010337 178.996473 \nL 126.22184 173.036492 \nL 132.433343 178.996473 \nL 138.644846 178.996473 \nL 144.856349 182.969794 \nL 151.067851 156.149877 \nL 157.279354 163.103189 \nL 163.490857 182.969794 \nL 169.70236 210.783042 \nL 175.913862 198.863079 \nL 182.125365 196.876418 \nL 188.336868 196.876418 \nL 194.548371 214.756364 \nL 200.759874 176.016482 \nL 206.971376 169.06317 \nL 213.182879 147.209904 \nL 219.394382 172.043161 \nL 225.605885 169.06317 \nL 231.817388 185.949785 \nL 238.02889 172.043161 \nL 244.240393 166.08318 \nL 250.451896 154.163216 \nL 256.663399 180.983134 \nL 262.874901 163.103189 \nL 269.086404 194.889758 \nL 275.297907 197.869749 \nL 281.50941 188.929776 \nL 287.720913 170.056501 \nL 293.932415 189.923106 \nL 300.143918 164.096519 \nL 306.355421 138.269931 \nL 312.566924 158.136537 \nL 318.778426 186.943116 \nL 324.989929 173.036492 \nL 331.201432 189.923106 \nL 337.412935 129.329959 \nL 343.624438 148.203234 \nL 349.83594 158.136537 \nL 356.047443 197.869749 \n\" style=\"fill:none;stroke:#2ca02c;stroke-linecap:square;stroke-width:1.5;\"/>\n   </g>\n   <g id=\"patch_3\">\n    <path d=\"M 36.465625 224.64 \nL 36.465625 7.2 \n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\n   </g>\n   <g id=\"patch_4\">\n    <path d=\"M 371.265625 224.64 \nL 371.265625 7.2 \n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\n   </g>\n   <g id=\"patch_5\">\n    <path d=\"M 36.465625 224.64 \nL 371.265625 224.64 \n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\n   </g>\n   <g id=\"patch_6\">\n    <path d=\"M 36.465625 7.2 \nL 371.265625 7.2 \n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;stroke-width:0.8;\"/>\n   </g>\n  </g>\n </g>\n <defs>\n  <clipPath id=\"pd8ed6c57f8\">\n   <rect height=\"217.44\" width=\"334.8\" x=\"36.465625\" y=\"7.2\"/>\n  </clipPath>\n </defs>\n</svg>\n",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     }
    }
   ],
   "source": [
    "## 18 データの可視化\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "df[:50].plot(x='年月日', y=['平均気温','最高気温','最低気温'], legend=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "output_type": "execute_result",
     "data": {
      "text/plain": [
       "            平均気温      最高気温      最低気温    降水量の合計  最深積雪  平均雲量  平均蒸気圧      平均風速  \\\n",
       "平均気温    1.000000  0.979122  0.980567  0.027858   NaN   NaN    NaN  0.226380   \n",
       "最高気温    0.979122  1.000000  0.928838 -0.041404   NaN   NaN    NaN  0.198049   \n",
       "最低気温    0.980567  0.928838  1.000000  0.078941   NaN   NaN    NaN  0.236879   \n",
       "降水量の合計  0.027858 -0.041404  0.078941  1.000000   NaN   NaN    NaN  0.186971   \n",
       "最深積雪         NaN       NaN       NaN       NaN   NaN   NaN    NaN       NaN   \n",
       "平均雲量         NaN       NaN       NaN       NaN   NaN   NaN    NaN       NaN   \n",
       "平均蒸気圧        NaN       NaN       NaN       NaN   NaN   NaN    NaN       NaN   \n",
       "平均風速    0.226380  0.198049  0.236879  0.186971   NaN   NaN    NaN  1.000000   \n",
       "日照時間    0.071758  0.213331 -0.062592 -0.367911   NaN   NaN    NaN  0.098581   \n",
       "\n",
       "            日照時間  \n",
       "平均気温    0.071758  \n",
       "最高気温    0.213331  \n",
       "最低気温   -0.062592  \n",
       "降水量の合計 -0.367911  \n",
       "最深積雪         NaN  \n",
       "平均雲量         NaN  \n",
       "平均蒸気圧        NaN  \n",
       "平均風速    0.098581  \n",
       "日照時間    1.000000  "
      ],
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>平均気温</th>\n      <th>最高気温</th>\n      <th>最低気温</th>\n      <th>降水量の合計</th>\n      <th>最深積雪</th>\n      <th>平均雲量</th>\n      <th>平均蒸気圧</th>\n      <th>平均風速</th>\n      <th>日照時間</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>平均気温</th>\n      <td>1.000000</td>\n      <td>0.979122</td>\n      <td>0.980567</td>\n      <td>0.027858</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.226380</td>\n      <td>0.071758</td>\n    </tr>\n    <tr>\n      <th>最高気温</th>\n      <td>0.979122</td>\n      <td>1.000000</td>\n      <td>0.928838</td>\n      <td>-0.041404</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.198049</td>\n      <td>0.213331</td>\n    </tr>\n    <tr>\n      <th>最低気温</th>\n      <td>0.980567</td>\n      <td>0.928838</td>\n      <td>1.000000</td>\n      <td>0.078941</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.236879</td>\n      <td>-0.062592</td>\n    </tr>\n    <tr>\n      <th>降水量の合計</th>\n      <td>0.027858</td>\n      <td>-0.041404</td>\n      <td>0.078941</td>\n      <td>1.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.186971</td>\n      <td>-0.367911</td>\n    </tr>\n    <tr>\n      <th>最深積雪</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>平均雲量</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>平均蒸気圧</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>平均風速</th>\n      <td>0.226380</td>\n      <td>0.198049</td>\n      <td>0.236879</td>\n      <td>0.186971</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1.000000</td>\n      <td>0.098581</td>\n    </tr>\n    <tr>\n      <th>日照時間</th>\n      <td>0.071758</td>\n      <td>0.213331</td>\n      <td>-0.062592</td>\n      <td>-0.367911</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.098581</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "execution_count": 91
    }
   ],
   "source": [
    "## 19 相関係数の算出\n",
    "\n",
    "df[['平均気温','降水量の合計', '日照時間']].corr()\n",
    "df.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "## 20 欠損値を補完してcsvに出力\n",
    "\n",
    "df.fillna(0).to_csv('data/export.csv', index=False)"
   ]
  }
 ]
}